spring.application.name = team

#web
server.port = 8010

# datasource
team.db.connect = localhost:5432
spring.datasource.url = jdbc:postgresql://${team.db.connect}/teamdb
spring.datasource.driverClassName = org.postgresql.Driver
spring.datasource.username = teamuser
spring.datasource.password = teampass

# JPA
spring.jpa.properties.hibernate.implicit_naming_strategy = component-path
spring.jpa.properties.hibernate.physical_naming_strategy = org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.properties.hibernate.hbm2ddl.auto = validate
spring.jpa.properties.hibernate.id.new_generator_mappings = true
spring.jpa.properties.hibernate.create_empty_composites.enabled = true

# messaging
team.kafka.connect = localhost:9092
spring.kafka.bootstrap-servers = ${team.kafka.connect}
spring.kafka.properties.spring.json.trusted.packages = *

spring.kafka.consumer.group-id = team
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.producer.key-serializer = org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer

# service discovery
eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
team.eureka.connect = localhost:8761
eureka.client.serviceUrl.defaultZone = http://${team.eureka.connect}/eureka

ribbon.eager-load.enabled = true
